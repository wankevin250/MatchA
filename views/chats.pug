extends layouts/standard.pug

block head
  link(rel='stylesheet', href='/css/chats.css')
  script(src='/socket.io/socket.io.js')
  script.
    var myID = -1;
    var roomuuid = null;
    const socket = io();
    var chatlist = [];
    
    
      if (chatlist != null) {
        for (let i = 0; i < chatlist.length; i++) {
          var chatbutton_temp = document.createElement("a");
          chatbutton_temp.className += "chatBtnClass";
          chatbutton_temp?.setAttribute('id', data[i].roomid);
          
          $('prototype-button-wrapper').appendChild(chatbutton_temp);
        }
      }
      
    /**
    $(window).on('load', function() {
      $.post('/chatlist', function(data) {
        chatlist = data.chatlist;
        myID = data.currentuser;
        
        if (chatlist != null) {
          for (let i = 0; i < chatlist.length; i++) {
            var chatbutton_temp = document.createElement("a");
            chatbutton_temp.className += "chatBtnClass";
            chatbutton_temp?.setAttribute('id', chatlist[i].roomid);
            chatbutton_temp.appendChild(document.createTextNode(chatlist[i].chatname));
            
            $('#prototype-button-wrapper').appendChild(chatbutton_temp);
          }
        }
      });
    });
    */
    
    // when running /openroom, load all prev messages to #messages using loop
    
    $(document).ready( function() {
      $(".leftHalf").addClass("fullWidth");
      
      $(".chatBtnClass").on("click", function() {
        let roomid = this.id;
        $.post('/openroom', { room : roomid }, function(data) {
          if (data.success) {
            room = roomid;
            roomuuid = roomid;
            
            socket.emit('join room', {
                user: myID,
                room: roomid,
            });
            
            // load all prev. messages to #messages using loop
                        
            $(".leftHalf").css('display', 'none');
            $(".rightHalf").css('display', 'block');
          }
        });
      });	
      
      $(".btnAceLeave").on("click", function() {
        $.post('/leaveroom', function(data) {
          if (data.success) {
            room = null;
            
            $(".leftHalf").css('display', 'block');
            $(".rightHalf").css('display', 'none');
          }
        });
      });
      
      
    });
    
    function sendMessage(){
        if ($('#message').val().trim() !== '') {
          // scrub text?
          
          socket.emit('chat message', {
          
              text: $('#message').val().trim(),
              sender: myID,
              room: room,
          });
        
          $.post('/sendmessage', { 
              text: $('#message').val().trim(),
              sender: myID,
              room: room,}, 
              
              function (data){
                // something with returned data?
          });
            
          $('#message').val('');
          $('#message').focus();
      }
    }
    
    $(document).ready(function() {
      socket.on('chat message', function (msg) {
          var message_temp = document.createElement("li");

          if (myID === msg.sender) {
            message_temp.setAttribute("class", "me");
          } else {
            message_temp.setAttribute("class", "other");
          }
          
          // somehow add the name of the person who sent the message
          
          message_temp.appendChild(document.createTextNode(msg.text));

          $('#messages').append(message_temp);
          
      });
    });
    
  
  title Chats 

block content
  h1(class="text-center italics bold") MatchA
  
  // proto button to enter first chatroom. TODO: make buttons for every chat in user's joined list  
  // TODO: js code for AJAX roomBtn.onclick -> call /openroom (opens this room)
  // when creating list, define a class of buttons in js to conduct ajax function on
  // with AJAX, send data in type "room" that is an JSON object { roomname: "", roomid: "" }
  // 
  div(class="leftHalf" id="prototype-button-wrapper")
    a#roomBtn.chatBtnClass Enter Chatroom
  
  // need to show chatbox iff req.session.currentroom != null
  div(class="rightHalf" id="chatbox")
    a.btnAceLeave(id="leaveChatBtn") Leave
    div()
      ul#messages.messageDisplay
    form#message-form
    div(id="form-message")
      input(id = 'message', class = 'form-control', autocomplete='off', placeholder='Type a message...')
      button#send-message.btnAceSend(type='button', onclick='return sendMessage();')  Send
  
  